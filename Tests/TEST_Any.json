{"root": {"nodes": [{"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "8643d376-e243-474e-bd74-382fa78df706"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "e0388745-63f1-4cfd-9f0f-09542ac8876f"}], "meta": {"var": {}, "label": "add"}, "name": "add", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 15, "value": 0, "bLabelHidden": false, "uuid": "8ba73bda-93e3-4c89-8743-cec7f4d7790e"}], "y": -220.61702127659572, "x": -412.8510638297872, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "add", "uuid": "a2b761eb-4e5b-4ede-96ea-8d78fa96b31d"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "s", "dataType": 2, "value": "", "bLabelHidden": false, "uuid": "3974da68-eec1-496f-9b93-30c9371e60cb"}], "meta": {"var": {}, "label": "makeString"}, "name": "makeString", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 2, "value": "", "bLabelHidden": false, "uuid": "87d37abb-062a-45f0-94b2-7cc345ab3a80"}], "y": -205.3191489361702, "x": -745.7446808510639, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "makeString", "uuid": "03c59fa9-0825-4028-b21a-fca9f5098f05"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "97aae24b-e8f9-4f0c-94da-8775cb53502b"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "cc78cf0b-b3fb-407b-ab45-58a0470101e3"}], "meta": {"var": {}, "label": "isGreaterOrEqual"}, "name": "isGreaterOrEqual", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "59956eb4-f935-4f39-bddd-01bb560bb455"}], "y": 315.70212765957444, "x": -428.7021276595745, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "isGreaterOrEqual", "uuid": "382039e0-3763-46f7-8d6f-117b8d4b71f0"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "b", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "c2429a8e-68b7-45b7-87b4-b0f145547fcf"}], "meta": {"var": {}, "label": "makeBool"}, "name": "makeBool", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "c4903cc8-227f-4f56-b3db-d0c9e79f5d64"}], "y": -46.808510638297875, "x": -724.468085106383, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "makeBool", "uuid": "d4aaf0e7-7bdd-4299-a647-f050402c7d84"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "45f85243-3e47-4e42-b9b1-766d7132dcc8"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "20e17453-19b9-4d98-9263-029dde61612e"}, {"direction": 0, "bDirty": false, "name": "c", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "62bde101-7654-44b1-b199-f533ea184ebe"}, {"direction": 0, "bDirty": false, "name": "W", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "f3011cb4-5ef8-41b5-be25-2f1c5e0ecadd"}], "meta": {"var": {}, "label": "v4Create"}, "name": "v4Create", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 8, "value": [0.0, 0.0, 0.0, 0.0], "bLabelHidden": false, "uuid": "3e55cfa0-f936-4351-932b-54ed0dbef8e3"}], "y": 130.85106382978717, "x": -728.7234042553192, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "v4Create", "uuid": "aff5df8e-9a1a-463e-82cb-0c48a1f9d630"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "b5589948-9ec0-4d8f-92a9-67ec12d810a6"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "0aee2f0a-41c8-4472-a7a6-fb64d25d5217"}], "meta": {"var": {}, "label": "isequal"}, "name": "isequal", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "6a6e039e-631a-4090-a23b-6047bca206b2"}], "y": 76.74468085106383, "x": -414.3191489361702, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "isequal", "uuid": "1f28dcde-6446-4cf7-97d0-0db8ec280a18"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "i", "dataType": 1, "value": 0, "bLabelHidden": false, "uuid": "71a84e55-9df3-416c-ba46-6371470351c9"}], "meta": {"var": {}, "label": "makeInt"}, "name": "makeInt", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 1, "value": 0, "bLabelHidden": false, "uuid": "c0fa97de-741c-4849-9d20-2636c1a9208a"}], "y": -154.25531914893617, "x": -735.1063829787234, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "makeInt", "uuid": "7cfd87b3-5f19-4059-bddd-d9a0af0c649a"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": 0, "bLabelHidden": false, "uuid": "130b234f-89c0-4ffb-bca0-34c5412ee5f1"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": 0, "bLabelHidden": false, "uuid": "0a596bfd-8e9c-458e-bf9d-1c52b4a4ead9"}], "meta": {"var": {}, "label": "substract"}, "name": "substract", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 15, "value": 0, "bLabelHidden": false, "uuid": "d4490d01-24b5-4d33-a6eb-a1aff35e8295"}], "y": -149.61702127659572, "x": -412.8510638297872, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "substract", "uuid": "5a452599-aab3-480d-a71d-e3df7889cbc3"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "615f8883-961e-4adf-ab82-acc97d831f3d"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "6e1fb9cd-8846-4771-8df5-cb75e355b048"}], "meta": {"var": {}, "label": "mult"}, "name": "mult", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 15, "value": 0, "bLabelHidden": false, "uuid": "062ba30a-83f1-4eb8-b0df-50587600938b"}], "y": -77.0, "x": -423.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "mult", "uuid": "684f8f8c-1460-4a7e-b048-fce5a692db7b"}, {"inputs": [], "meta": {"var": {}, "label": ""}, "name": "__scene_inputs__", "outputs": [], "y": -259.5744680851064, "x": -918.0851063829787, "computeCode": "def compute(self):\n    '''\n    node calculations here\n    '''\n    # getting data from inputs\n    # do stuff\n    # write data to outputs\n    return\n", "type": "scene_inputs", "uuid": "ba849d48-9246-424f-ba1e-04f90a03f65a"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "6f93d8a6-87a5-410d-8301-bf7f810dac99"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "ad1b91f9-a443-4218-9400-40aa2b846d15"}, {"direction": 0, "bDirty": false, "name": "c", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "12c5e3a4-94c1-44d2-8398-fb37fac19435"}, {"direction": 0, "bDirty": false, "name": "theta", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "23b1192c-b47b-40ec-a932-0bb7348da1ff"}], "meta": {"var": {}, "label": "quatFromAxisRotation"}, "name": "quatFromAxisRotation", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 11, "value": [0.0, 0.0, 0.0, 1.0], "bLabelHidden": false, "uuid": "b4d9f86d-abf4-418f-afb0-49f56ee83d81"}], "y": 240.4255319148936, "x": -779.7872340425532, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "quatFromAxisRotation", "uuid": "7b37ab56-2614-4573-9e78-d55c46c58f02"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "f", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "28fd6d14-50e1-4f38-a799-e0e10ded7b1c"}], "meta": {"var": {}, "label": "makeFloat"}, "name": "makeFloat", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "1321dfa4-0e8e-47de-9434-3fc1ba3233ac"}], "y": -98.93617021276594, "x": -731.9148936170213, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "makeFloat", "uuid": "44b7051c-cbe4-4817-81be-3ff030666f6e"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "4ce004e6-b307-4ead-8af9-b425519789bd"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "3d88622a-e5ab-453b-809d-040089ca0646"}], "meta": {"var": {}, "label": "isLess"}, "name": "isLess", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "bddf36cd-cbd5-4fcd-be46-53924dc82ac0"}], "y": 401.89361702127655, "x": -406.76595744680856, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "isLess", "uuid": "c93b691a-d0b4-41ca-ae78-51bbb9280711"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "theta", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "027ead0f-95d5-49b2-ba09-b1733c141b3d"}], "meta": {"var": {}, "label": "m33FromX"}, "name": "m33FromX", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 9, "value": [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]], "bLabelHidden": false, "uuid": "fa017586-9a71-480d-8851-fc3ef9e435a2"}], "y": 382.97872340425533, "x": -740.4255319148937, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "m33FromX", "uuid": "7dc01ca2-e8c6-43f0-85fd-8f684c5c2678"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "theta", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "86010177-08b4-4cda-bc98-e2eb4b6b1813"}], "meta": {"var": {}, "label": "m44FromZ"}, "name": "m44FromZ", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 10, "value": [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], "bLabelHidden": false, "uuid": "82e9ba99-57f1-4ea8-b07b-9060ca86619e"}], "y": 441.48936170212767, "x": -740.4255319148938, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "m44FromZ", "uuid": "181f9c5d-04b0-4d6f-85b5-39c3bb252650"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "e7dba96d-07e6-45b3-9115-99e7229b444b"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "d1936bae-3891-4b92-88b3-5be9e7adc792"}], "meta": {"var": {}, "label": "isLessOrEqual"}, "name": "isLessOrEqual", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "94589ece-fce4-4b51-b2a0-2d9af5e77e76"}], "y": 236.7021276595745, "x": -426.76595744680856, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "isLessOrEqual", "uuid": "2ef8782a-25d2-4860-914e-5565f6840c06"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "260c6b6f-4aad-48e5-8f8d-88ed002e8da8"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "6031d6cc-7963-4aff-8dd9-b77a7f6db207"}], "meta": {"var": {}, "label": "isGreater"}, "name": "isGreater", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "a5a5d989-130c-465f-9a2c-7ab89af4de28"}], "y": 149.87234042553192, "x": -420.3829787234043, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "isGreater", "uuid": "56205254-3884-4c08-8a40-83dfc56bf25e"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "743ecadd-2e32-457f-ae4c-b8defd3c928f"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "cf19b692-bc0e-49d7-a646-1cbc22c2b6b8"}, {"direction": 0, "bDirty": false, "name": "c", "dataType": 0, "value": 0.0, "bLabelHidden": false, "uuid": "453aa8ac-ab39-46db-8855-76dbe5e50107"}], "meta": {"var": {}, "label": "v3Create"}, "name": "v3Create", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 7, "value": [0.0, 0.0, 0.0], "bLabelHidden": false, "uuid": "d5c30b25-2b2a-4f9b-9589-2eff0168e82f"}], "y": 37.23404255319152, "x": -732.9787234042554, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "v3Create", "uuid": "520f1282-c572-4d89-ad9b-4d7f3586bd90"}, {"inputs": [{"direction": 0, "bDirty": false, "name": "a", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "8b401245-17ab-401e-858e-cd30b8046a84"}, {"direction": 0, "bDirty": false, "name": "b", "dataType": 15, "value": "0", "bLabelHidden": false, "uuid": "f90200fd-97d0-4b0e-8f1a-89ca79ddd50f"}], "meta": {"var": {}, "label": "divide"}, "name": "divide", "outputs": [{"direction": 1, "bDirty": false, "name": "out", "dataType": 15, "value": 0.0, "bLabelHidden": false, "uuid": "02f26fa2-481d-49a3-92c2-8e2e67e4c605"}, {"direction": 1, "bDirty": false, "name": "result", "dataType": 3, "value": false, "bLabelHidden": false, "uuid": "9a9dc9a0-ad86-4864-87e9-194989bcada0"}], "y": 0.0, "x": -420.0, "computeCode": "def compute(self):\n    # arguments will be taken from inputs\n    kwargs = {}\n    for i in self.inputs.values():\n        if i.dataType is not DataTypes.Exec:\n            kwargs[i.name] = i.getData()\n    for ref in refs:\n        if ref.dataType is not DataTypes.Exec:\n            kwargs[ref.name] = ref.setData\n    result = foo(**kwargs)\n    if returnType is not None:\n        self.setData('out', result)\n    if nodeType == NodeTypes.Callable:\n        outExec.call()\n", "type": "divide", "uuid": "a227797c-8140-45ac-a464-3b10d92f4383"}], "edges": [], "variables": []}}